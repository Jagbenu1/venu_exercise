[{"C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\index.js":"1","C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\App.js":"2","C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\reportWebVitals.js":"3","C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\containers\\LoginPage\\LoginPage.js":"4","C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\containers\\NewsPage\\NewsPage.js":"5","C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\containers\\NewsPage\\Stories\\Stories.js":"6","C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\shared\\apiLink.js":"7","C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\containers\\NewsPage\\Stories\\Story\\Story.js":"8"},{"size":564,"mtime":1608610282793,"results":"9","hashOfConfig":"10"},{"size":462,"mtime":1611167932500,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1652,"mtime":1611167829230,"results":"13","hashOfConfig":"10"},{"size":238,"mtime":1609908792938,"results":"14","hashOfConfig":"10"},{"size":3197,"mtime":1611100229917,"results":"15","hashOfConfig":"10"},{"size":624,"mtime":1609999274417,"results":"16","hashOfConfig":"10"},{"size":1349,"mtime":1611079691550,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1isck4h",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},"C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\index.js",[],["39","40"],"C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\App.js",[],"C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\reportWebVitals.js",[],"C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\containers\\LoginPage\\LoginPage.js",["41","42"],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { withRouter } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './LoginPage.scss';\r\n\r\nfunction LoginPage(){\r\n    const { register, errors, handleSubmit } = useForm();\r\n    const history = useHistory();\r\n    const onSubmit = data => {\r\n        \r\n        history.push('/news');\r\n        \r\n        console.log(data);\r\n    }\r\n    return (\r\n        <div className=\"Login\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input name=\"firstName\" ref={register({ required: true })} />\r\n                    {errors.firstName && \"First name is required.\"}\r\n                    <br/>\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input name=\"lastName\" ref={register({ required: true })} />\r\n                    {errors.lastName && \"Last name is required.\"}\r\n                    <br/>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input name=\"email\" ref={register({ required: true, pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ })} />\r\n                    {errors.email && errors.email.type === \"required\" && \"Email is required\"}\r\n                    {errors.email && errors.email.type === \"pattern\" && \"This needs to be a valid email.\"}\r\n                    <br/>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginPage);","C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\containers\\NewsPage\\NewsPage.js",[],"C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\containers\\NewsPage\\Stories\\Stories.js",["43","44"],"import React, { useState, useEffect } from 'react';\r\nimport { getStoryIds } from '../../../shared/apiLink';\r\nimport { getStory } from '../../../shared/apiLink';\r\nimport Story from './Story/Story';\r\nimport './Stories.scss';\r\n\r\nexport default function Stories() {\r\n    const [storyIds, setStoryIds] = useState([]);\r\n    const [favoriteStory, setFavoriteStory] = useState({});\r\n    const [prevLikedItem, setPrevLikedItem] = useState(null);\r\n    const [likedItem, setLikedItem] = useState(null);\r\n\r\n    const getAndSetStoryIds = async () => {\r\n        const res = await getStoryIds();\r\n        setStoryIds(res);\r\n    }\r\n\r\n    const getAndSetFavorite = async () => {\r\n        const res = await getStory(likedItem);\r\n        setFavoriteStory(res);\r\n    }\r\n\r\n    const setStoryValue = (storyId = null) => {\r\n        // set and keep track of the previously selected Item, and update the current/likedItem. Passing in null will unset likedItem\r\n        setPrevLikedItem(likedItem);\r\n        setLikedItem(storyId);\r\n    }\r\n\r\n    const handleLikeOnClick = (storyId) => {\r\n        // if current state is equal to the previous state. param should be null, else it should return the story id\r\n        setStoryValue(storyId);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const heartIconQuerySelect = document.querySelectorAll('.Story .heart-icon');\r\n        \r\n        const removePrevLikedItem = () => {\r\n            if (prevLikedItem && heartIconQuerySelect[prevLikedItem - 1].classList.contains('active')) {\r\n                heartIconQuerySelect[prevLikedItem - 1].classList.remove('active');\r\n            }\r\n        }\r\n\r\n        if (likedItem && heartIconQuerySelect) {\r\n            // This removes the previous heart icon if it exists\r\n            removePrevLikedItem();\r\n            heartIconQuerySelect[likedItem - 1].classList.add('active');\r\n        }\r\n\r\n        console.log('likedItem', likedItem, 'prevLikedItem', prevLikedItem);\r\n\r\n        // if current likedItem is equal to the previous likedItem, Remove Heart icon and unset the current listItem \r\n        if (likedItem === prevLikedItem) {\r\n            removePrevLikedItem();\r\n            setStoryValue();\r\n        }\r\n    }, [likedItem, prevLikedItem]);\r\n\r\n    useEffect(() => {\r\n        getAndSetStoryIds();\r\n        getAndSetFavorite();\r\n    }, [likedItem]);\r\n\r\n    const renderNews = storyIds.map((index, storyId) => {\r\n        return <Story\r\n            key={index}\r\n            storyId={storyId}\r\n            setStoryValue={setStoryValue}\r\n            handleLikeOnClick={handleLikeOnClick}\r\n        />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {(favoriteStory) ? (\r\n                <div className=\"favorite Story\">\r\n                    <b>Favorite Story</b>\r\n                    <a href={favoriteStory.url} target='_blank' rel=\"noreferrer\"><p>{favoriteStory.title}</p></a>\r\n                    <p>{favoriteStory.id}</p>\r\n                    <p>By: {favoriteStory.by}</p>\r\n                    <p>Posted: {new Date(favoriteStory.time * 1000).toString()}</p>\r\n                </div>\r\n            ) : \"\"}\r\n            <br />\r\n            <div className=\"Stories\">\r\n                {renderNews}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\shared\\apiLink.js",[],"C:\\Users\\jacqu\\Desktop\\venu_exercise\\src\\containers\\NewsPage\\Stories\\Story\\Story.js",["45"],"import React, { useState, useEffect } from 'react';\r\nimport { getStory } from '../../../../shared/apiLink';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport './Story.scss';\r\n\r\nexport default function Story({ storyId, setStoryValue }){\r\n    const [story, setStory] = useState({});\r\n    const [isActive, setIsActive] = useState(true);\r\n\r\n    const getAndSetStoryId = async () => {\r\n        const res = await getStory(storyId);\r\n        setStory(res);\r\n        //console.log(story);\r\n    };\r\n\r\n    const toggleLike = (togId) => {\r\n        const activeQuery = document.querySelectorAll('.Story .heart-icon');\r\n        // console.log('ACTIVE',active);\r\n        for (let i = 0; i < activeQuery.length; i++) {\r\n            if (activeQuery[i].classList.contains('active')) {\r\n                activeQuery[i].classList.remove('active');\r\n            }\r\n          }\r\n\r\n          if(isActive){\r\n            activeQuery[storyId - 1].classList.add('active');\r\n          }else{\r\n            activeQuery[storyId - 1].classList.remove('active'); \r\n          }\r\n         \r\n\r\n          setStoryValue(togId);\r\n        // if(active && like){\r\n        //     active.classList.add('active');\r\n        //     console.log(active.classList);\r\n        //     setStoryValue(togId);\r\n        // }else{\r\n        //     active.classList.remove('active');\r\n        // }\r\n        //console.log(active);\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        //getStory(storyId).then(data => data && data.url && setStory(data));\r\n        getAndSetStoryId();\r\n    }, []);\r\n\r\n    //const changeColour = like ? \"red\" : \"grey\";\r\n    //console.log(story);\r\n    \r\n\r\n    return story && story.url ? (\r\n        <div className=\"Story\">\r\n            <a href={story.url} target='_blank' rel=\"noreferrer\"><p>{story.title}</p></a>\r\n            <p>{story.id}</p>\r\n            <p>By: {story.by}</p>\r\n            <p>Posted: {new Date(story.time*1000).toString()}</p>\r\n            <button className=\"likeBtn\"\r\n                onClick={() => {\r\n                    setIsActive(prevIsActive => !prevIsActive);\r\n                    toggleLike(story.id);\r\n                    //console.log(isActive);\r\n                }}    \r\n            >\r\n                <FontAwesomeIcon icon={faHeart} className=\"heart-icon\" />\r\n            </button>\r\n        </div>\r\n    ): null;\r\n}",["46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":28,"column":88,"nodeType":"54","messageId":"55","endLine":28,"endColumn":89,"suggestions":"56"},{"ruleId":"52","severity":1,"message":"53","line":28,"column":113,"nodeType":"54","messageId":"55","endLine":28,"endColumn":114,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":56,"column":8,"nodeType":"60","endLine":56,"endColumn":34,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":61,"column":8,"nodeType":"60","endLine":61,"endColumn":19,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"64","line":48,"column":8,"nodeType":"60","endLine":48,"endColumn":10,"suggestions":"65"},{"ruleId":"48","replacedBy":"66"},{"ruleId":"50","replacedBy":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["70","71"],["72","73"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setStoryValue'. Either include it or remove the dependency array.","ArrayExpression",["74"],"React Hook useEffect has a missing dependency: 'getAndSetFavorite'. Either include it or remove the dependency array.",["75"],"React Hook useEffect has a missing dependency: 'getAndSetStoryId'. Either include it or remove the dependency array.",["76"],["68"],["69"],"no-global-assign","no-unsafe-negation",{"messageId":"77","fix":"78","desc":"79"},{"messageId":"80","fix":"81","desc":"82"},{"messageId":"77","fix":"83","desc":"79"},{"messageId":"80","fix":"84","desc":"82"},{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"removeEscape",{"range":"91","text":"92"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"93","text":"94"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"95","text":"92"},{"range":"96","text":"94"},"Update the dependencies array to be: [likedItem, prevLikedItem, setStoryValue]",{"range":"97","text":"98"},"Update the dependencies array to be: [getAndSetFavorite, likedItem]",{"range":"99","text":"100"},"Update the dependencies array to be: [getAndSetStoryId]",{"range":"101","text":"102"},[1143,1144],"",[1143,1143],"\\",[1168,1169],[1168,1168],[2171,2197],"[likedItem, prevLikedItem, setStoryValue]",[2293,2304],"[getAndSetFavorite, likedItem]",[1614,1616],"[getAndSetStoryId]"]